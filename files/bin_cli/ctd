#!/bin/bash


##################
# Interval Timer #
##################

# Usage:   workout 35
# Press 'q' or ctrl-C to exit
# Uses toilet to display numbers
# Uses cvlc to play sounds (VLC)


# interval sound
SOUND="/home/jvalcher/Music/singing_bowl.wav"


# center text vertically
function center_vertically ()
{
    # number of lines in current terminal
    TOT_LINES=$(tput lines)

    # number of lines to skip 
    NUM_LINES=$(( TOT_LINES / 3 ))
    
    # while NUM_LINES is greater than 0...
    while [ $NUM_LINES -gt 0 ]
    do
        # print new line
        echo ""

        # subtract line
        NUM_LINES=$(( NUM_LINES - 1 ))

    done
}

function prepend_zero ()
{
    NUM=$1

    if [ $NUM -lt 10 ]
    then
        echo "0$NUM"
    else
        echo "$NUM"
    fi
}

# exit program
function quit () 
{
    # return cursor
    tput cnorm 

    clear
    exit 0
}

# countdown timer
function timer () 
{
    # set duration to first argument
    COL="$(tput cols)"
    IFS=:
    set -- $*
    SECS=$(( ${1#0} * 3600 + ${2#0} * 60 + ${3#0} ))

    # while SECS is greater than 0...
    while [ $SECS -gt 0 ]
    do

        # print time
        clear
        printf "\n   Press 'q' to quit"
        center_vertically
        HOUR=$(( SECS/3600 ))
        HOUR=$(prepend_zero $HOUR)
        MIN=$(( (SECS/60)%60 ))
        MIN=$(prepend_zero $MIN)
        SEC=$(( SECS%60 ))
        SEC=$(prepend_zero $SEC)
        toilet -f mono9 "$HOUR:$MIN:$SEC"
        #toilet -f smbraille "$HOUR:$MIN:$SEC"
        #toilet -f smmono9 "$HOUR:$MIN:$SEC"
        #toilet -t -f wideterm "$HOUR:$MIN:$SEC"

        # 1-second timeout to store single-character ('q')
        read -t 1 -N 1 INPUT

        # run quit if 'q' pressed
        if [[ $INPUT = "q" ]]; then
            quit
        fi

        # run quit if ctrl-C pressed
        function trap_ctrlc () {
            quit
        }
        trap "trap_ctrlc" 2

        # subtract second
        SECS=$(( SECS -1 ))

    done
    
    # play sound
    cvlc $SOUND > /dev/null 2>&1 &
}


# check if argument supplied
if [ $# -eq 0 ]; then
    printf "\nUsage: \n\tctd 00:30:00\n\n"
    exit 1;
fi


# turn off cursor
tput civis


# set interval duration in seconds to first command line argument
INTERVAL=$1

# repeat timer indefinitely
timer $INTERVAL

# return cursor
tput cnorm 
clear
