
###########
# Provision Ubuntu 21.10
###########


#!/bin/bash

###########
# Install software
###########

printf "\n\nInstalling Apt software...\n"
echo "________________"
sudo apt update
sudo apt upgrade -y

sudo apt-get install -y \
    vim-gtk3 \
    tmux \
    google-chrome-stable \
    gnome-tweaks \
    snapd \
    xclip \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    pandoc \
    feh \
    libglib2.0-dev-bin \
    gsettings-desktop-schemas \
    xdotool \
    cmake \
    build-essential \
    python3-dev \
    mupen64plus* \
    mono-complete \
    aptitude \
    vim-addon-manager \
    tree \
    trash-cli \
    okular \
sudo apt install -y virtualbox virtualbox-ext-pack



printf "\n\nCopying, sourcing .bash_aliases...\n"
echo "________________"
cp files/.bash_aliases /home/$USER/.bash_aliases
. /home/$USER/.bashrc


#printf "\n\nInstalling Docker...\n"
#echo "________________"
#DOCK_KEY="/usr/share/keyrings/docker-archive-keyring.gpg"
#if [ -e $DOCK_KEY ]; then
#    printf "Already installed\n"
#else
#    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg 
#    echo \
#    "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
#    $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null 
#    sudo apt-get update 
#    sudo apt-get install -y docker-ce docker-ce-cli containerd.io
#    sudo usermod -aG docker ${USER}
#    docker run hello-world
#fi

#printf "\n\nInstalling docker-compose...\n"
#echo "________________"
#DC="/usr/local/bin/docker-compose"
#if [ -e $DC ]; then
#    printf "Already installed\n"
#else
#    sudo curl -L "https://github.com/docker/compose/releases/download/1.29.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#    sudo chmod +x /usr/local/bin/docker-compose
#    docker-compose --version
#fi


#printf "\n\nInstalling Ansible...\n"
#echo "________________"
#ANSIBLE_STATUS=$(dpkg -s ansible 2>/dev/null | echo $?)
#if [ $ANSIBLE_STATUS -eq 0 ]; then
#    printf "Already installed\n"
#else
#    sudo apt install software-properties-common -y
#    sudo apt-add-repository -y --update ppa:ansible/ansible
#    sudo apt install ansible -y
#fi


printf "\n\nRemoving unnecessary Apt files...\n"
echo "________________"
sudo apt autoremove -y


printf "\n\nInstalling Snap software...\n"
echo "________________"
sudo snap install spotify
sudo snap install discord
sudo snap install gimp
sudo snap install postman
sudo snap install shotcut --classic


#############
# Copy configuration files
#############

printf "\n\n"
printf "Copying configuration files and scripts...\n" 
echo "________________"

printf "jvalcher \t\t(sudoers.d)\n"
sudo cp files/jvalcher /etc/sudoers.d/jvalcher

printf "Gnome terminal\n"
dconf load /org/gnome/terminal/ < files/gnome_terminal_jvalcher

echo ".tmux.conf"
cp files/.tmux.conf /home/$USER/

echo ".vimrc"
cp files/.vimrc /home/$USER/.vimrc

printf "\n\n"
printf "Copying Vim skeletons...\n" 
echo "________________"
VIM_DIR="/home/$USER/.vim"
if [ -e $VIM_DIR/skeletons ]; then
    rsync -a --delete files/skeletons/ /home/$USER/.vim/skeletons/
else 
    cp -r files/skeletons $VIM_DIR/
fi

printf "touchpad_toggle\n"
sudo cp files/touchpad_toggle /usr/local/bin/
sudo chown $USER /usr/local/bin/touchpad_toggle

printf "~/bin...\n"
dir="~/bin"
if [[ ! -e $dir ]]; then
    mkdir $dir
elif [[ ! -d $dir ]]; then
    mkdir $dir
fi
sudo cp -r files/bin /home/$USER/

echo "gtk.css"
cp files/gtk.css /home/$USER/.config/gtk-3.0/gtk.css

printf "singing_bowl.wav\n"
cp files/singing_bowl.wav /home/$USER/Music/


###########
# Set wallpaper
###########

printf "\n\n"
printf "Setting wallpaper...\n"
echo "________________"

WALLPAPER="forest2.jpg"
LOGIN="gradient_blue.png"
PICTURES_DIR="/home/$USER/Pictures/wallpapers"

# create, sync wallpaper directory
if [ -e $PICTURES_DIR ]; then
    rsync -a --delete wallpapers/* $PICTURES_DIR 
else
    mkdir $PICTURES_DIR
    cp wallpapers/* $PICTURES/DIRA
fi

# Change wallpaper
gsettings set org.gnome.desktop.background picture-uri "file:////home/$USER/Pictures/wallpapers/$WALLPAPER"
echo "Changed wallpaper to $WALLPAPER"

# Change login screen
sudo scripts/ubuntu-gdm-set-background --image $PICTURES_DIR/$LOGIN > /dev/null 2>&1
echo "Changed login wallpaper to $LOGIN"


###########
# Configure Gnome launcher
###########

printf "\n\n"
printf "Configuring Gnome launcher...\n"
echo "________________"
printf "Bottom position, centered, transparent, size=64, unity-backlit\n"
gsettings set org.gnome.shell.extensions.dash-to-dock extend-height false
gsettings set org.gnome.shell.extensions.dash-to-dock dock-position BOTTOM
gsettings set org.gnome.shell.extensions.dash-to-dock transparency-mode FIXED
gsettings set org.gnome.shell.extensions.dash-to-dock dash-max-icon-size 64


##########
# Exit message
##########

printf "\n\n\n"
echo "________________"
printf "Provisioning complete\n"
echo "________________"
printf "\n\n"


