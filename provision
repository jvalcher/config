
###########
# Provision Ubuntu 21.10
###########


#!/bin/bash

###########
# Install software
###########

printf "\n\nUpdating, upgrading APT...\n"
echo "________________"
sudo cp files/prox.conf /etc/apt/apt.conf.d/
sudo apt update
sudo apt upgrade -y

printf "\n\nInstalling APT software...\n"
echo "________________"
sudo apt install -y \
    software-properties-common \
    vim-gtk3 \
    tmux \
	gdb \
    google-chrome-stable \
    gnome-tweaks \
    snapd \
    xclip \
    tofrodos \
    imagemagick \
    apt-transport-https \
    ca-certificates \
    curl \
    cpu-checker \
    gnupg \
    pandoc \
    feh \
    peek \
    libglib2.0-dev-bin \
    gsettings-desktop-schemas \
    xdotool \
    cmake \
    build-essential \
    python3-dev \
    mono-complete \
    golang \
    nodejs \
    default-jdk \
    npm \
    mupen64plus-ui-console \
    vim-addon-manager \
    tree \
    trash-cli \
    okular \
    virtualbox \
    virtualbox-ext-pack


printf "\n\nInstalling Spotify...\n"
echo "________________"
curl -sS https://download.spotify.com/debian/pubkey_5E3C45D7B312C643.gpg | sudo apt-key add - 
echo "deb http://repository.spotify.com stable non-free" | sudo tee /etc/apt/sources.list.d/spotify.list
sudo apt-get update && sudo apt-get install spotify-client -y


printf "\n\nCopying, sourcing .bash_aliases...\n"
echo "________________"
cp files/.bash_aliases /home/$USER/.bash_aliases
. /home/$USER/.bashrc


printf "\n\nRemoving unnecessary Apt files...\n"
echo "________________"
sudo apt autoremove -y


printf "\n\nInstalling Snap software...\n"
echo "________________"
sudo snap install discord
sudo snap install mediainfo


#############
# Copy configuration files
#############

printf "\n\n"
printf "Copying configuration files and scripts...\n" 
echo "________________"

printf "jvalcher (sudoers.d)\n"
sudo cp files/jvalcher /etc/sudoers.d/jvalcher

printf "Gnome terminal\n"
dconf load /org/gnome/terminal/ < files/gnome_terminal_jvalcher

echo ".tmux.conf"
cp files/.tmux.conf /home/$USER/

echo ".gdbinit"
cp files/.gdbinit /home/$USER/

echo ".gitconfig"
cp files/.gitconfig /home/$USER/

echo "~/include"
cp files/include /home/$USER/

echo "gtk.css"
cp files/gtk.css /home/$USER/.config/gtk-3.0/gtk.css

echo "gnome-terminal"
dconf load /org/gnome/terminal/legacy/profiles:/ < files/gnome-terminal-profiles.dconf

echo "key bindings"
dconf load /org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/ < files/gnome-keybindings.dconf

printf "~/bin...\n"
BIN_DIR="/home/$USER/bin"
if [ ! -d $BIN_DIR ]; then
    mkdir $BIN_DIR
    cp files/bin/* $BIN_DIR/
else
    rsync -a --delete files/bin/ $BIN_DIR
fi

printf "singing_bowl.wav\n"
cp files/singing_bowl.wav /home/$USER/Music/

echo ".vimrc"
cp files/.vimrc /home/$USER/.vimrc


#####################
# vim configuration #
#####################

printf "\n\n"
printf "Configuring vim...\n"
echo "________________"

VIM_DIR="/home/$USER/.vim"

echo "Copying skeletons..." 
if [ -e $VIM_DIR/skeletons ]; then
    rsync -a --delete files/skeletons/ /home/$USER/.vim/skeletons/
else 
    cp -r files/skeletons $VIM_DIR/
fi

echo "Installing vundle..." 
git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim

echo "Installing vim-plug..." 
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

echo "Installing vundle plugins..." 
vim -c 'PluginInstall' -c 'qa!'

echo "Installing vim-plug plugins..." 
vim -c 'PlugInstall' -c 'qa!'

echo "Installing vim-superman..." 
if [ ! -d $VIM_DIR/bundle/vim-superman ]; then
    git clone https://github.com/jez/vim-superman ~/.vim/bundle/vim-superman
fi

echo "Installing YouCompleteMe..." 
(cd ~/.vim/bundle/YouCompleteMe; python3 install.py --all)

. /home/$USER/.bashrc


###########
# Set wallpaper
###########

printf "\n\n"
printf "Setting wallpaper...\n"
echo "________________"

WALLPAPER="codeRain.jpg"
LOGIN="gradient_blue.png"
PICTURES_DIR="/home/$USER/Pictures/wallpapers"

# create, sync wallpaper directory
if [ -e $PICTURES_DIR ]; then
    rsync -a --delete wallpapers/* $PICTURES_DIR 
else
    mkdir $PICTURES_DIR
    cp wallpapers/* $PICTURES/DIRA
fi

# Change wallpaper
gsettings set org.gnome.desktop.background picture-uri "file:////home/$USER/Pictures/wallpapers/$WALLPAPER"
echo "Changed wallpaper to $WALLPAPER"

# Change login screen
sudo scripts/ubuntu-gdm-set-background --image $PICTURES_DIR/$LOGIN > /dev/null 2>&1
echo "Changed login wallpaper to $LOGIN"


###########
# Configure Gnome launcher
###########

printf "\n\n"
printf "Configuring Gnome launcher...\n"
echo "________________"
printf "Bottom position, centered, transparent, size=64, unity-backlit\n"
gsettings set org.gnome.shell.extensions.dash-to-dock extend-height false
gsettings set org.gnome.shell.extensions.dash-to-dock dock-position BOTTOM
gsettings set org.gnome.shell.extensions.dash-to-dock transparency-mode FIXED
gsettings set org.gnome.shell.extensions.dash-to-dock dash-max-icon-size 48


##########
# Exit message
##########

printf "\n\n\n"
echo "________________"
printf "Provisioning complete\n"
echo "________________"
printf "\n\n"


